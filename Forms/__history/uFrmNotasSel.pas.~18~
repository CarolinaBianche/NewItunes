unit uFrmNotasSel;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Graphics, FMX.Controls, FMX.Forms, FMX.Dialogs, FMX.StdCtrls,
  uFrmTemplate, FMX.Controls.Presentation, FMX.Objects, FMX.Layouts, FMX.Effects,UntLib,uLoading,
  FMX.Gestures,FMX.DialogService, FMX.Edit, FMX.ScrollBox, FMX.Memo, AnonThread,
  FMX.Memo.Types;

type
  TFrmSelNotas = class(TFrmTemplate)
    rctCard: TRectangle;
    lytEsqCard: TLayout;
    img_pendente: TImage;
    LinTop: TLine;
    LinRod: TLine;
    lytBoxCard: TLayout;
    lytTopCard: TLayout;
    lblTxtNota: TLabel;
    lytCliente: TLayout;
    lytVeiculo: TLayout;
    lblPlaca: TLabel;
    lblVeiculo: TLabel;
    lytImgVisualizar: TLayout;
    Label2: TLabel;
    imgVisualizar: TImage;
    lblStatus: TLabel;
    imgArg: TImage;
    imgEx: TImage;
    imgVisu: TImage;
    lblIdEntrada: TLabel;
    lblDataEntrada: TLabel;
    Label1: TLabel;
    lblNomeCliente: TLabel;
    procedure FormCreate(Sender: TObject);
    procedure speBtnMenuClick(Sender: TObject);
  private
    { Private declarations }
    procedure CarregaNotas;
    procedure OnSelecionarRomaneio(Sender :TObject);
    procedure TapSelecionaRomaneio(Sender: TObject; const Point: TPointF);
  public
    { Public declarations }
  end;

var
  FrmSelNotas: TFrmSelNotas;

implementation

{$R *.fmx}

uses uFrmMain, uDMLocal, uDmRest, uFrmNotas, uFrmAtividades;

procedure TFrmSelNotas.CarregaNotas;
begin
  TLibery.CustomThread(
    procedure()
    Begin
    //Processo de Inicio
      TThread.Synchronize(
       TThread.CurrentThread,
        procedure()
        Begin
          TLoading.Show(FrmMain,'Carregando Notas ...');
          TLibery.ActiveForm := nil;
          vertLista.Visible:=false;
          vertLista.BeginUpdate;
          DMLocal.QryNotas.DisableControls;
        End

      );
    End,
    procedure()
    var
     LFrame   : TRectangle;
     LPosicao : Single;
     Qtd      : Integer;
    Begin
    //Processo Principal

      DMLocal.BuscarNotasEntrada(DmLocal.QryFilaUND_ARMAZEN.AsString,DmLocal.QryFilaNR_ENTRADA.AsInteger);
      DmLocal.QryNotas.First;

      if DmLocal.QryNotas.IsEmpty then
      Begin
      FrmMain.MensagemTost('Notas não encontradas, Verifique!');
      End;

      rctCard.Visible  := false;
      LPosicao         := 8;



      while not DMLocal.QryNotas.Eof do
      Begin

        //Povoando os Cards


        rctCard.Tag         := DmLocal.QryNotasNRNOTA.AsInteger;

        lblPlaca.Text       := DmLocal.QryNotasCNPJ.asstring;

        lblTxtNota.Text     := DmLocal.QryNotasNRNOTA.AsInteger.ToString;

        lblnomeCliente.Text := DmLocal.QryNotasNOME_CLIENTE.AsString;




        if DmLocal.QryNotasSTATUS.asstring='N' then
        Begin
        LinTOP.Stroke.Color := $FF434343;
        LinROD.Stroke.Color := $FF434343;
        lblStatus.Text      := 'aguardando...';
        img_pendente.Bitmap :=  imgArg.Bitmap;

        End
        else
        if DmLocal.QryNotasSTATUS.asstring='V' then
        Begin
        LinTOP.Stroke.Color := $FF1D609F;
        LinROD.Stroke.Color := $FF1D609F;
        lblStatus.Text      := 'visualizado...';
        img_pendente.Bitmap :=  imgVisu.Bitmap;
        End else
        if DmLocal.QryNotasSTATUS.asstring='E' then
        Begin
        LinTOP.Stroke.Color := $FFFFAD26;
        LinROD.Stroke.Color := $FFFFAD26;
        lblStatus.Text      := 'execução...';
        img_pendente.Bitmap := imgEx.Bitmap;
        End ;

       //Clonando
        DmLocal.SetFrameClone(rctCard,LFrame,vertLista,LPosicao,OnSelecionarRomaneio,TapSelecionaRomaneio,'ROM');
        DMLocal.QryNotas.Next;
      End;
    End,
    procedure()
    Begin
     //Processo Completo
      TLoading.Hide;
      VertLista.Visible := true;
      VertLista.EndUpdate;
      VertLista.ScrollTo(0,0);
      DmLocal.QryNotas.EnableControls;
    End,
    procedure(const AException :string)
    Begin
      TLoading.Hide;
      TDialogService.ShowMessage('Erro no processamento da thread Valida Motrista! ' +
      AException);
    End,
    True
  );
end;

procedure TFrmSelNotas.FormCreate(Sender: TObject);
begin
  inherited;

  lbl_titulo.Text     := 'Entrada - Notas';
  lblInfoTexto.Text   := FrmMain.motorista;
  lblIdEntrada.Text   := DmLocal.QryFilaNR_ENTRADA.AsInteger.ToString;
  lblDataEntrada.Text := FormatDateTime('dd/mm/yy',DmLocal.QryFilaDATA_ENTRADA.AsDateTime);
  rctCard.Visible     := false;
  CarregaNotas;
end;

procedure TFrmSelNotas.OnSelecionarRomaneio(Sender: TObject);
begin
  {$IFDEF MSWINDOWS}
   TLibery.CustomThread(
    procedure()
    Begin
    //Processo de Inicio
      TThread.Synchronize(
       TThread.CurrentThread,
        procedure()
        Begin
          TLoading.Show(FrmMain,'Sincronizando Itens...');
          TLibery.ActiveForm := nil;
          DmLocal.LimparLista(Self,vertLista,rctCard.Name);
        End

      );
    End,
    procedure()
    var
     LFrame   : TRectangle;
     LPosicao,LPosicaoB : Single;
     s:string;
     Qtd      : Integer;
    Begin

     DmRest.RecebeItens(DmRest.LimpaString(DMLocal.QryNotasCNPJ.asstring,'.,-,/'),DMLocal.QryNotasNRNOTA.asinteger,DmLocal.QryNotasNrSerie.asstring);

    End,
    procedure()
    Begin
     //Processo Completo
      TLoading.Hide;
      FrmMain.lytNavegacao.Controls.Clear;
      TLibery.ActiveForm.DisposeOf;
      TLibery.ActiveForm:=nil;
      TLibery.OpenForm(TFrmAtividades,FrmMain.lytNavegacao);
      TLibery.MudarAba(FrmMain.tbiMain,Sender);

    End,
    procedure(const AException :string)
    Begin
      TLoading.Hide;
      TDialogService.ShowMessage('Erro no processamento da thread Carregar Atividades! ' +
      AException);
    End,
    false
  );

  {$ENDIF}
end;

procedure TFrmSelNotas.speBtnMenuClick(Sender: TObject);
begin
  inherited;
  FrmMain.lytNavegacao.Controls.Clear;
  TLibery.ActiveForm.DisposeOf;
  TLibery.ActiveForm:=nil;
  TLibery.OpenForm(TFrmNotas,FrmMain.lytNavegacao);
  TLibery.MudarAba(FrmMain.tbiMain,Sender);
end;

procedure TFrmSelNotas.TapSelecionaRomaneio(Sender: TObject;
  const Point: TPointF);
begin
 {$IFDEF ANDROID}
   TLibery.CustomThread(
    procedure()
    Begin
    //Processo de Inicio
      TThread.Synchronize(
       TThread.CurrentThread,
        procedure()
        Begin
          TLoading.Show(FrmMain,'Sincronizando Itens...');
          TLibery.ActiveForm := nil;
          DmLocal.LimparLista(Self,vertLista,rctCard.Name);
        End

      );
    End,
    procedure()
    var
     LFrame   : TRectangle;
     LPosicao,LPosicaoB : Single;
     s:string;
     Qtd      : Integer;
    Begin

     DmRest.RecebeItens(DmRest.LimpaString(DMLocal.QryNotasCNPJ.asstring,'.,-,/'),DMLocal.QryNotasNRNOTA.asinteger,DmLocal.QryNotasNrSerie.asstring);

    End,
    procedure()
    Begin
     //Processo Completo
      TLoading.Hide;
      FrmMain.lytNavegacao.Controls.Clear;
      TLibery.ActiveForm.DisposeOf;
      TLibery.ActiveForm:=nil;
      TLibery.OpenForm(TFrmAtividades,FrmMain.lytNavegacao);
      TLibery.MudarAba(FrmMain.tbiMain,Sender);

    End,
    procedure(const AException :string)
    Begin
      TLoading.Hide;
      TDialogService.ShowMessage('Erro no processamento da thread Carregar Atividades! ' +
      AException);
    End,
    false
  );

 {$ENDIF}
end;

end.
